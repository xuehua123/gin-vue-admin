##--------------------------------------------------------------------
## EMQX主配置文件
## 用途：安全卡片中继系统MQTT Broker配置
## 版本：EMQX 5.x
##--------------------------------------------------------------------

##--------------------------------------------------------------------
## 集群配置
##--------------------------------------------------------------------
cluster {
  name = emqx_nfc_relay_cluster
  discovery_strategy = manual
}

node {
  name = "emqx@127.0.0.1"
  cookie = "nfc_relay_secret_cookie_2024"
  data_dir = "./data"
}

##--------------------------------------------------------------------
## 监听器配置
##--------------------------------------------------------------------
listeners.tcp.default {
  bind = "0.0.0.0:1883"
  max_connections = 1024000
  acceptors = 16
}

listeners.ssl.default {
  bind = "0.0.0.0:8883"
  max_connections = 512000
  acceptors = 16
  ssl_options {
    keyfile = "./etc/certs/key.pem"
    certfile = "./etc/certs/cert.pem"
    cacertfile = "./etc/certs/cacert.pem"
    verify = verify_peer
    fail_if_no_peer_cert = false
    secure_renegotiate = true
    reuse_sessions = true
    honor_server_cipher_order = true
    ciphers = "ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384"
    versions = ["tlsv1.2", "tlsv1.3"]
  }
}

listeners.ws.default {
  bind = "0.0.0.0:8083"
  max_connections = 1024000
  websocket.mqtt_path = "/mqtt"
}

listeners.wss.default {
  bind = "0.0.0.0:8084"
  max_connections = 512000
  websocket.mqtt_path = "/mqtt"
  ssl_options {
    keyfile = "./etc/certs/key.pem"
    certfile = "./etc/certs/cert.pem"
  }
}

##--------------------------------------------------------------------
## MQTT协议配置
##--------------------------------------------------------------------
mqtt {
  max_packet_size = 1MB
  max_clientid_len = 65535
  max_topic_levels = 128
  max_qos_allowed = 2
  max_topic_alias = 65535
  retain_available = true
  wildcard_subscription = true
  shared_subscription = true
  exclusive_subscription = false
  max_subscriptions = 10
  upgrade_qos = false
  max_inflight = 32
  retry_interval = 30s
  max_awaiting_rel = 100
  await_rel_timeout = 300s
  session_expiry_interval = 2h
  max_mqueue_len = 1000
  mqueue_priorities = disabled
  mqueue_default_priority = lowest
  mqueue_store_qos0 = true
  use_username_as_clientid = false
  peer_cert_as_username = disabled
  peer_cert_as_clientid = disabled
}

##--------------------------------------------------------------------
## JWT认证配置
##--------------------------------------------------------------------
authentication = [
  {
    enable = true
    backend = "jwt"
    mechanism = "password_based"
    
    # JWT验证配置
    use_jwks = false
    algorithm = "hmac-based"
    secret = "78c0f08f-9663-4c9c-a399-cc4ec36b8112"  # 与项目JWT密钥保持一致
    secret_base64_encoded = false
    
    # JWT Claims验证规则 - 根据官方文档更新格式
    verify_claims = {
      exp = "${timestamp}"
      iss = "qmPlus"
      aud = "GVA"
      client_id = "${clientid}"
    }
    
    # 从JWT中提取字段映射到EMQX变量
    from = "password"  # JWT token从password字段获取
    
    # 断开连接时的行为
    disconnect_after_expire = true
  }
]

##--------------------------------------------------------------------
## ACL权限控制配置
##--------------------------------------------------------------------
authorization {
  sources = [
    {
      type = file
      enable = true
      path = "./etc/acl.conf"  # 指向我们创建的ACL规则文件
    }
  ]
  
  no_match = deny  # 没有匹配规则时默认拒绝
  deny_action = ignore  # 被拒绝时的行为
  cache {
    enable = true
    max_size = 32
    ttl = 1m
  }
}

##--------------------------------------------------------------------
## 连接限制配置
##--------------------------------------------------------------------
conn_congestion {
  alarm_threshold = 0.8
  clear_threshold = 0.7
}

##--------------------------------------------------------------------
## 保留消息配置
##--------------------------------------------------------------------
retainer {
  enable = true
  msg_expiry_interval = 0
  msg_clear_interval = 0
  max_payload_size = 1MB
  stop_publish_clear_msg = false
  
  backend {
    type = built_in_database
    storage_type = ram
    max_retained_messages = 0
  }
}

##--------------------------------------------------------------------
## 共享订阅配置
##--------------------------------------------------------------------
shared_subscription {
  enable = true
  strategy = round_robin
}

##--------------------------------------------------------------------
## 系统主题配置
##--------------------------------------------------------------------
sys_topics {
  sys_msg_interval = 1m
  sys_heartbeat_interval = 30s
  sys_announce_interval = 1m
}

##--------------------------------------------------------------------
## 日志配置
##--------------------------------------------------------------------
log {
  file_handlers.default {
    level = warning
    file = "./log/emqx.log"
    rotation {
      enable = true
      size = 50MB
      count = 10
    }
    formatter = text
  }
  
  # 控制台日志
  console_handler {
    enable = true
    level = info
    formatter = text
  }
}

##--------------------------------------------------------------------
## 性能与安全配置
##--------------------------------------------------------------------
flapping_detect {
  enable = true
  max_count = 15
  window_time = 1m
  ban_time = 5m
}

force_shutdown {
  enable = true
  max_mailbox_size = 1000
  max_heap_size = 32MB
}

overload_protection {
  enable = true
  backoff_delay = 1s
  backoff_gc = true
  backoff_hibernation = true
  backoff_new_conn = true
}

##--------------------------------------------------------------------
## 速率限制
##--------------------------------------------------------------------
limiter {
  bytes_in {
    rate = "100KB/s"
    capacity = "100KB"
  }
  message_in {
    rate = "1000/s" 
    capacity = 1000
  }
  connection {
    rate = "1000/s"
    capacity = 1000
  }
  message_routing {
    rate = "1000/s"
    capacity = 1000
  }
}

##--------------------------------------------------------------------
## WebHook集成 (可选，用于与后端API集成)
##--------------------------------------------------------------------
# webhook {
#   url = "http://127.0.0.1:8888/api/v1/mqtt/webhook"
#   headers {
#     "Content-Type" = "application/json"
#     "Authorization" = "Bearer your-webhook-token"
#   }
#   body = "${topic},${clientid},${username},${payload}"
#   pool_size = 8
#   connect_timeout = 5s
#   request_timeout = 10s
#   enable_pipelining = true
# }

##--------------------------------------------------------------------
## Dashboard配置
##--------------------------------------------------------------------
dashboard {
  listeners.http {
    bind = "0.0.0.0:18083"
  }
  default_username = "admin"
  default_password = "nfc_relay_admin_2024"
  
  # API密钥配置
  bootstrap_users_file = "./etc/dashboard_users.json"
} 