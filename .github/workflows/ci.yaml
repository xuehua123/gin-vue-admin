name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:
  release:
    types: [ created, edited ]
  workflow_dispatch:
    inputs:
      gva_version:
        required: true
        type: string

jobs:
  init:
    if: github.repository_owner == 'flipped-aurora'
    runs-on: ubuntu-latest
    steps:
      - name: init
        run: |
          echo "flipped-aurora"
  frontend:
    if: github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'release'
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - name: Check out branch
        uses: actions/checkout@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: web/yarn.lock

      - name: Install dependencies with Yarn
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build
      
      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: web/dist

  backend:
    if: github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'release'
    name: Build Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Check out branch
        uses: actions/checkout@v4

      - name: Set up Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache-dependency-path: server/go.sum

      - name: Download dependencies
        run: go mod download
      
      - name: Run tests
        run: go test -v ./...
      
      - name: Build Go binary
        run: CGO_ENABLED=0 go build -v -o ../gva-server
      
      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-binary
          path: gva-server

  devops-test:
    if: github.ref == 'refs/heads/test'
    name: Deploy to Test
    needs: [init, backend, frontend]
    uses: ./.github/workflows/reusable-deploy.yml
    with:
      environment: test
      sed_config: true
    secrets:
      HOST: ${{ secrets.HOST }}
      USER: ${{ secrets.USER }}
      KEY: ${{ secrets.KEY }}
      PROT: ${{ secrets.PROT }}
      deploy_path: ${{ secrets.MKDIRTEST }}
      
  release-pr:
    if: ${{ github.event_name == 'workflow_dispatch' && github.repository_owner == 'flipped-aurora'}}
    runs-on: ubuntu-latest
    steps:
      - name: Check out branch
        uses: actions/checkout@v4
      - name: Sed Config
        env:
          GVA_VERSION: ${{ inputs.gva_version }}
        shell: bash
        run: |
          sed -i 's/当前版本.*`$/当前版本:v'${GVA_VERSION##v}'`/' web/src/core/config.js
          sed -i 's/当前版本.*$/当前版本:v'${GVA_VERSION##v}'/' server/core/server.go
          sed -i 's/当前版本.*$/当前版本:v'${GVA_VERSION##v}'/' web/src/core/gin-vue-admin.js
          sed -i 's/"version": ".*",$/"version": "'${GVA_VERSION##v}'",/' web/package.json
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add . && git commit -m "release: v${GVA_VERSION##v}"
      - name: Push
        uses: ad-m/github-push-action@v0.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      - uses: google-github-actions/release-please-action@v4
        with:
          skip-github-release: true

  release-please:
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    runs-on: ubuntu-latest
    needs:
      - init
      - backend
      - frontend
    outputs:
      release_created: ${{ steps.release_please.outputs.release_created }}
      tag_name: ${{ steps.release_please.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release_please

  devops-prod:
    if: needs.release-please.outputs.release_created || github.event_name == 'release'
    name: Deploy to Production
    needs: [init, release-please]
    uses: ./.github/workflows/reusable-deploy.yml
    with:
      environment: production
      sed_config: true
    secrets:
      HOST: ${{ secrets.HOST }}
      USER: ${{ secrets.USER }}
      KEY: ${{ secrets.KEY }}
      PROT: ${{ secrets.PROT }}
      deploy_path: ${{ secrets.MKDIR }}
      
  docker:
    name: Build and Push Docker Images
    if: github.ref == 'refs/heads/stop-stop-stop' # Condition to prevent automatic run
    runs-on: ubuntu-latest
    needs:
      - init
      - release-please
    steps:
      - name: Check out branch
        uses: actions/checkout@v4
      - name: Login to Aliyun Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_DOCKERHUB_USER }}
          password: ${{ secrets.ALIYUN_DOCKERHUB_PASSWORD }}
      - name: Build and Push Images
        shell: bash
        run: |
          sed  -i 56c"\        && yarn install && yarn build" Makefile
          make image TAGS_OPT="latest"
          sed -i 's#./entrypoint.sh"#./entrypoint.sh","actions"#g' deploy/docker/Dockerfile
          sed -i "s#COPY build/ /usr/share/nginx/html/#COPY . /opt/gva#g" deploy/docker/Dockerfile
          sed -i 16c"\    && cd /opt/gva/server/ && go mod tidy && cd /opt/gva/web/ && yarn" deploy/docker/Dockerfile
          sed -i "s#open: true#open: false#g" web/vite.config.js
          make images TAGS_OPT="latest"
          docker push registry.cn-hangzhou.aliyuncs.com/gva/gin-vue-admin:latest
          docker push registry.cn-hangzhou.aliyuncs.com/gva/web:latest
          docker push registry.cn-hangzhou.aliyuncs.com/gva/server:latest
          docker push registry.cn-hangzhou.aliyuncs.com/gva/all:latest