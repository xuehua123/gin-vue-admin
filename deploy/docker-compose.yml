version: '3.8'

networks:
  gva-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
  mysql-config:
    driver: local

services:
  # MySQL 数据库服务 - 生产级配置
  mysql:
    image: mysql:8.0
    container_name: gva-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: Gva123456!
      MYSQL_DATABASE: gin_vue_admin
      MYSQL_USER: gva_user
      MYSQL_PASSWORD: Gva123456!
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - mysql-config:/etc/mysql/conf.d
      - ./mysql/init:/docker-entrypoint-initdb.d
    command: >
      mysqld
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --max_connections=1000
      --innodb_buffer_pool_size=512M
      --innodb_log_file_size=256M
      --innodb_flush_log_at_trx_commit=2
      --innodb_flush_method=O_DIRECT
      --slow_query_log=1
      --slow_query_log_file=/var/lib/mysql/slow.log
      --long_query_time=2
      --log-error=/var/lib/mysql/error.log
      --general_log=0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - gva-network

  # Redis 缓存服务 - 生产级配置
  redis:
    image: redis:7-alpine
    container_name: gva-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/etc/redis/redis.conf
    command: >
      redis-server
      --requirepass "Gva123456!"
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --timeout 300
      --tcp-keepalive 60
      --save 900 1
      --save 300 10
      --save 60 10000
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - gva-network

  # 后端服务
  backend:
    build:
      context: ../server
      dockerfile: Dockerfile
    image: gin-vue-admin-backend:${TAG:-latest}
    container_name: gin-vue-admin-backend
    restart: unless-stopped
    volumes:
      - ../server/config.yaml:/go/src/github.com/flipped-aurora/gin-vue-admin/server/config.yaml
    environment:
      TZ: Asia/Shanghai
    ports:
      - "8888:8888"  # 添加端口映射
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gva-network
    deploy:
      resources:
        limits:
          memory: 2G

  # 前端服务
  frontend:
    build:
      context: ../
      dockerfile: web/Dockerfile
      args:
        # 增加构建时的内存分配
        BUILDKIT_INLINE_CACHE: 1
    image: gin-vue-admin-frontend:${TAG:-latest}
    container_name: gin-vue-admin-frontend
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - gva-network
    deploy:
      resources:
        limits:
          memory: 8G  # 进一步增加内存限制
        reservations:
          memory: 2G